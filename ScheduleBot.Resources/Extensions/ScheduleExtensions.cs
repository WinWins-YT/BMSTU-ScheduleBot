using System.Text;
using ScheduleBot.Resources.Enums;
using ScheduleBot.Resources.Models;
using ScheduleBot.Resources.Tools;

namespace ScheduleBot.Resources.Extensions;

public static class ScheduleExtensions
{
    public static string GetScheduleFor(this IEnumerable<Lesson> lessons, DayOfWeek dayOfWeek, DateTime semesterStart, string showDayOfWeek = "—Å–µ–≥–æ–¥–Ω—è")
    {
        StringBuilder output = new();
        var isNumeric = Schedule.IsNumeric(semesterStart);
        
        var dw = (int)dayOfWeek;
        if (dw == 0)
        {
            dw = 1;
            isNumeric = !isNumeric;
            output.AppendLine("–¢–∞–∫ –∫–∞–∫ " + showDayOfWeek + " –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ, —Ç–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ (" +
                          (isNumeric ? "—á–∏—Å–ª–∏—Ç–µ–ª—å" : "–∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å") + ")");
        }
        else
        {
            if (showDayOfWeek != "—Å–µ–≥–æ–¥–Ω—è" && showDayOfWeek != "–∑–∞–≤—Ç—Ä–∞")
                output.AppendLine("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ " + showDayOfWeek);
            else
                output.AppendLine($"–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {showDayOfWeek} ({(isNumeric ? "—á–∏—Å–ª–∏—Ç–µ–ª—å" : "–∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å")})");
        }

        List<Lesson> lessonsList = new();
        
        if (showDayOfWeek != "—Å–µ–≥–æ–¥–Ω—è" && showDayOfWeek != "–∑–∞–≤—Ç—Ä–∞")
            lessonsList = lessons.Where(x => x.DayOfWeek == (DayOfWeek)dw)
                .OrderBy(x => x.StartTime).ToList();
        else
            lessonsList = lessons.Where(x =>
                x.DayOfWeek == (DayOfWeek)dw && (x.Type == LessonType.All ||
                                                 x.Type == (isNumeric
                                                     ? LessonType.Numerator
                                                     : LessonType.Denominator)))
                .OrderBy(x => x.StartTime).ToList();

        output.AppendLine();
        
        foreach (var lesson in lessonsList)
        {
            if (showDayOfWeek != "—Å–µ–≥–æ–¥–Ω—è" && showDayOfWeek != "–∑–∞–≤—Ç—Ä–∞")
            {
                output.AppendLine("üëÄ –ü–æ " + (lesson.Type == LessonType.All ? "—á–∏—Å–ª–∏—Ç–µ–ª—è–º –∏ –∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—è–º" :
                    lesson.Type == LessonType.Numerator ? "—á–∏—Å–ª–∏—Ç–µ–ª—è–º" : "–∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—è–º"));
            }
            output.AppendLine($"‚åõ –ü–∞—Ä–∞ {lesson.Para}: {lesson.StartTime} - {lesson.EndTime}");
            output.AppendLine($"üìö –ü—Ä–µ–¥–º–µ—Ç: {lesson.Name}");
            output.AppendLine($"üè´ –ê—É–¥–∏—Ç–æ—Ä–∏—è: {lesson.Location}");
            output.AppendLine(lesson.Teacher != "" ? $"üë®‚Äçüè´ –ü—Ä–µ–ø–æ–¥: {lesson.Teacher}" : "üë®‚Äçüè´ –ü—Ä–µ–ø–æ–¥ –Ω–µ —É–∫–∞–∑–∞–Ω");
            output.AppendLine();
        }

        return output.ToString();
    }
}